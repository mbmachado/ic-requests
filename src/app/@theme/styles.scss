@use 'styles/material';
@use 'Styles/variables';

@import '@fontsource/nunito/latin';
@import '@fontsource/unica-one/latin';
@import '@fontsource/material-icons';

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --blue: #{variables.$blue};
    --blue-light: #{variables.$blue-light};
    --vermilion: #{variables.$vermilion};
    --vermilion-light: #{variables.$vermilion-light};
    --green: #{variables.$green};
    --green-light: #{variables.$green-light};
    --emerald: #{variables.$emerald};
    --emerald-light: #{variables.$emerald-light};
    --yellow: #{variables.$yellow};
    --yellow-light: #{variables.$yellow-light};
    --purple: #{variables.$purple};
    --purple-ligth: #{variables.$purple-light};
    --gray: #{variables.$gray};
    --gray-light: #{variables.$gray-light};
    --graphite: #{variables.$graphite};
    --graphite-light: #{variables.$graphite-light};
    --orange: #{variables.$orange};
    --orange-light: #{variables.$orange-light};
    --red: #{variables.$red};
    --red-light: #{variables.$red-light};
    --white: #{variables.$white};
  }

  :root[class='dark-theme'] {
    --blue: #{variables.$dth-blue};
    --blue-light: #{variables.$dth-blue-light};
    --vermilion: #{variables.$dth-vermilion};
    --vermilion-light: #{variables.$dth-vermilion-light};
    --green: #{variables.$dth-green};
    --green-light: #{variables.$dth-green-light};
    --emerald: #{variables.$dth-emerald};
    --emerald-light: #{variables.$dth-emerald-light};
    --yellow: #{variables.$dth-yellow};
    --yellow-light: #{variables.$dth-yellow-light};
    --purple: #{variables.$dth-purple};
    --purple-ligth: #{variables.$dth-purple-light};
    --gray: #{variables.$dth-gray};
    --gray-light: #{variables.$dth-gray-light};
    --graphite: #{variables.$dth-graphite};
    --graphite-light: #{variables.$dth-graphite-light};
    --orange: #{variables.$dth-orange};
    --orange-light: #{variables.$dth-orange-light};
    --red: #{variables.$dth-red};
    --red-light: #{variables.$dth-red-light};
    --white: #{variables.$dth-white};
  }

  html {
    @apply font-nunito h-full;
  }

  body {
    @apply text-base text-graphite font-medium h-full;
  }

  a:not([matRipple]) {
    @apply text-blue font-bold hover:underline focus:outline outline-blue outline-2 outline-offset-2 rounded-lg;
  }
}

@layer components {
  .label-text {
    @apply text-xs font-bold;
  }

  .small-text {
    @apply text-sm font-extra-bold;
  }

  .base-text {
    @apply text-base font-medium;
  }

  .base-text-bold {
    @apply text-base font-bold;
  }

  .large-text {
    @apply text-lg font-bold;
  }

  .title-text {
    @apply text-xl font-bold;
  }

  .spinner::before {
    content: '';
    @apply box-border absolute top-1/2 left-1/2 w-24 h-24 mt-[-10px] ml-[-10px] border-2 border-white border-solid rounded-full;
    border-top-color: var(--blue);
    animation: spinner 0.8s linear infinite;
  }

  @keyframes spinner {
    to {
      transform: rotate(360deg);
    }
  }
}

@mixin snack-btn-bold {
  button.mat-mdc-button.mat-mdc-snack-bar-action {
    @apply text-white font-bold;
  }
}

.snack {
  &-success > div.mdc-snackbar__surface {
    @apply bg-emerald;
    @include snack-btn-bold;
  }

  &-error > div.mdc-snackbar__surface {
    @apply bg-red;
    @include snack-btn-bold;
  }
}

mat-icon {
  &.icon-12 {
    @apply w-12 h-12;
  }

  &.icon-16 {
    @apply w-16 h-16;
  }

  &.icon-20 {
    @apply w-20 h-20;
  }
}

.fullscreen-dialog {
  @apply h-full w-full;
}
